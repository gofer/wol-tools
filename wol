#!/bin/sh

HOST2IP=host2ip
IP2HOST=ip2host
IP2MAC=ip2mac
WOLCMD=wake_on_lan

LOCALDB=local.db

SUCCESS=0
FAILURE=1

function usage()
{
    cmd=`basename $1`
    echo "[usage] ${cmd} [hostname or IP address or MAC address]" 1>&2
}

function exist()
{
    file=$1
    t=`ls $file 2> /dev/null | wc -c`
    if [ $t -eq 0 ]; then
        echo ${FAILURE}
        return
    else
        echo ${SUCCESS}
        return
    fi
}

function exist_files()
{
    files=(${HOST2IP} ${IP2HOST} ${IP2MAC} ${WOLCMD})
    
    for file in ${files[@]}; do
        t=`exist ${file}`
        if [ $t -ne ${SUCCESS} ]; then
            echo ${FAILURE}
            return
        fi
    done

    echo ${SUCCESS}
    return
}

function args()
{
    arg=$1
    
    # Is MAC address?
    t=`echo "${arg}:" | egrep '([0-9a-fA-F]{2}:){6}' | wc -c`
    if [ $t -ge 1 ]; then
        echo "MAC ${arg}"
        return
    fi
    
    # Is IP address?
    t=`echo "${arg}." | egrep '([0-9]{1,3}\.){4}' | wc -c`
    if [ $t -ge 1 ]; then
        for s in `echo "${arg}" | sed -E 's/\./ /g'`;
        do
            if [ $s -ge 256 ]; then
                echo "UNKOWN ${arg}"
                return
            fi
        done

        if [ $s -eq ${SUCCESS} ]; then
            echo "IP ${arg}"
            return
        fi
    fi
    
    echo "HOST ${arg}"
    return
}

function have_db_record()
{
    query=$1
    t=`cat ${LOCALDB} | egrep ${query} | sed -E 's/\t/ /g' | sed -E 's/ ( +)/ /g'`
    if [ `echo -n $t | wc -c` -eq 0 ]; then
        echo ${FAILURE}
        return
    fi

    mac=`echo $t | cut -d ' ' -f 3`
    echo ${SUCCESS} ${mac}
    return
}

function arg_is_mac()
{
    mac=$1
    ./${WOLCMD} ${mac}
}

function arg_is_ip()
{
    ip=$1
    
    # have cache?
    t=(`have_db_record ${ip}`)
    if [ ${t[0]} -eq ${FAILURE} ]; then
        mac=`./${IP2MAC} ${ip}`
        if [ `echo -n ${mac} | wc -c` -eq 0 ]; then
            echo "Failed on ${IP2MAC}" 1>&2
            exit
        fi
    else
        mac=${t[1]}
    fi
    
    arg_is_mac ${mac}
}

function arg_is_host()
{
    host=$1
    
    ip=`./${HOST2IP} ${host} | tail -1`
    if [ `echo -n ${ip} | wc -c` -eq 0 ]; then
        echo "Failed on ${HOST2IP}" 1>&2
        exit
    fi

    arg_is_ip ${ip}
}

function main()
{
    ARGV=($@)

    t=`exist_files`
    if [ $t -ne ${SUCCESS} ]; then
        echo -e "Cannot find network command file." 1>&2
        usage $0
        exit
    fi
    
    t=(`args ${ARGV[@]}`)
    case ${t[0]} in
    MAC  )
        arg_is_mac  ${t[1]}
        ;;
    IP   )
        arg_is_ip   ${t[1]}
        ;;
    HOST )
        arg_is_host ${t[1]}
        ;;
    *    )
        echo -e "Invalid argument." 1>&2
        usage $0
        exit
        ;;
    esac
    
    return
}

main $@

